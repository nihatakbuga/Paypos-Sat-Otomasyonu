
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.html.parser.DTDConstants;




/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ASUS
 */
public class HomePage extends javax.swing.JFrame {

     /**
     * Creates new form HomePage
     */
     Connection conn=null;
     PreparedStatement pst=null;
     ResultSet rs=null;
     VeresiyeSatıs ver=new VeresiyeSatıs();
     public static String toplam;
     public  static int veresiye=0;
        
     public HomePage() {
        initComponents();
          setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("Payposshopping.png")));
        jPanel4.setVisible(false);
        jMenu1.setVisible(false);
         switch (KullanıcıGiris.yetki) {
             case "Admin":
                 jMenu1.setVisible(true);
                 break;
             case "Kullanıcı":
                 jMenu1.setVisible(true);
                 jMenuItem1.setVisible(false);
                 jMenuItem4.setVisible(false);
                 jMenuItem5.setVisible(false);
                 jMenuItem6.setVisible(false);
                 jMenuItem8.setVisible(false);
                 break;
             default:
                 jMenu1.setVisible(true);
                 jMenuItem1.setVisible(false);
                 jMenuItem4.setVisible(false);
                 jMenuItem5.setVisible(false);
                 jMenuItem6.setVisible(false);
                 jMenuItem8.setVisible(false);
                 jMenuItem3.setVisible(false);
                 break;
         }
      
     
     }

    public static String getToplam() {
        return toplam;
        
    }

    public static void setToplam(String toplam) {
        HomePage.toplam = toplam;
         
    }

   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked", "Convert2Lambda"})
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane4 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        cm_doviz = new javax.swing.JComboBox();
        lbl_doviz = new javax.swing.JLabel();
        lbl_paraustu = new javax.swing.JLabel();
        btn_veresiyesatıs = new javax.swing.JButton();
        btn_iade = new javax.swing.JButton();
        lbl_nakit = new javax.swing.JLabel();
        txt_nakittutar = new javax.swing.JTextField();
        btn_satıs = new javax.swing.JButton();
        lbl_kdvoranı = new javax.swing.JLabel();
        lbl_indirim = new javax.swing.JLabel();
        cm_kdv = new javax.swing.JComboBox();
        cm_indirim = new javax.swing.JComboBox();
        lbl_goster = new javax.swing.JLabel();
        txt_ustukalan = new javax.swing.JTextField();
        lbl_goster1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        lbl_barkodgir = new javax.swing.JLabel();
        txt_barkodgir = new javax.swing.JTextField();
        lbl_urunadi = new javax.swing.JLabel();
        lbl_miktar = new javax.swing.JLabel();
        lbl_fiyat = new javax.swing.JLabel();
        lbl_urungoster = new javax.swing.JLabel();
        lbl_fiyatgoster = new javax.swing.JLabel();
        lbl_miktargoster = new javax.swing.JLabel();
        lbl_toplamtutar = new javax.swing.JLabel();
        txt_toplamtutar = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_urunler = new javax.swing.JTable();
        btn_kapat = new javax.swing.JButton();
        btn_urunsil = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable3);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Paypos ");
        setBounds(new java.awt.Rectangle(380, 220, 0, 0));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        cm_doviz.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cm_doviz.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "TL", "Dolar", "Euro" }));

        lbl_doviz.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lbl_doviz.setText("Döviz        :");

        lbl_paraustu.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lbl_paraustu.setText("Para Üstü/Kalan :");

        btn_veresiyesatıs.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btn_veresiyesatıs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/payposveresiyesatıs.png"))); // NOI18N
        btn_veresiyesatıs.setText("Veresiye Satış");
        btn_veresiyesatıs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_veresiyesatısActionPerformed(evt);
            }
        });

        btn_iade.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btn_iade.setIcon(new javax.swing.ImageIcon(getClass().getResource("/table-remove-icon.png"))); // NOI18N
        btn_iade.setText("İade");
        btn_iade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_iadeActionPerformed(evt);
            }
        });

        lbl_nakit.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lbl_nakit.setText("Nakit        :");

        txt_nakittutar.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        txt_nakittutar.setForeground(new java.awt.Color(0, 153, 51));
        txt_nakittutar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_nakittutarFocusLost(evt);
            }
        });

        btn_satıs.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btn_satıs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/payposalısveris.png"))); // NOI18N
        btn_satıs.setText("Satış");
        btn_satıs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_satısActionPerformed(evt);
            }
        });

        lbl_kdvoranı.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lbl_kdvoranı.setText("Kdv Oranı:");

        lbl_indirim.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lbl_indirim.setText("İndirim    :");

        cm_kdv.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cm_kdv.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seciniz", "%1", "%8", "%18" }));

        cm_indirim.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cm_indirim.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seciniz", "%1", "%5", "%10" }));

        lbl_goster.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        lbl_goster.setForeground(new java.awt.Color(204, 51, 0));

        txt_ustukalan.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        txt_ustukalan.setForeground(new java.awt.Color(204, 51, 0));

        lbl_goster1.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        lbl_goster1.setForeground(new java.awt.Color(204, 51, 0));

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PayposStok16.png"))); // NOI18N
        jButton1.setText("Stok");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbl_indirim, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl_kdvoranı, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl_doviz, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(cm_doviz, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cm_indirim, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cm_kdv, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_goster1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl_goster, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lbl_nakit, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_nakittutar))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lbl_paraustu)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_ustukalan))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btn_satıs)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_veresiyesatıs, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_iade)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cm_doviz, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_doviz, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbl_nakit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt_nakittutar, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(24, 24, 24)
                            .addComponent(lbl_goster1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cm_kdv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbl_kdvoranı, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_goster, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_indirim, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cm_indirim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbl_paraustu, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_ustukalan, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_iade)
                    .addComponent(btn_veresiyesatıs)
                    .addComponent(btn_satıs)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        lbl_barkodgir.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        lbl_barkodgir.setText("Barkod numarasını giriniz:");

        txt_barkodgir.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        txt_barkodgir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_barkodgirKeyReleased(evt);
            }
        });

        lbl_urunadi.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lbl_urunadi.setText("Ürün adı :");

        lbl_miktar.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lbl_miktar.setText("Miktar    :");

        lbl_fiyat.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lbl_fiyat.setText("Fiyat       :");

        lbl_toplamtutar.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lbl_toplamtutar.setText("Toplam Tutar :");

        txt_toplamtutar.setEditable(false);
        txt_toplamtutar.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        txt_toplamtutar.setForeground(new java.awt.Color(0, 153, 51));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lbl_fiyat, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl_miktar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl_urunadi, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_urungoster, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl_miktargoster, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl_fiyatgoster, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(lbl_barkodgir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lbl_toplamtutar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt_toplamtutar, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txt_barkodgir, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_barkodgir, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_barkodgir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_urunadi)
                            .addComponent(lbl_urungoster, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbl_miktar)
                            .addComponent(lbl_miktargoster, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbl_fiyat)
                            .addComponent(lbl_fiyatgoster, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbl_toplamtutar, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_toplamtutar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        table_urunler.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        table_urunler.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        table_urunler.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Barkod", "Ürün Adı", "Miktar", "Fiyat"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(table_urunler);
        if (table_urunler.getColumnModel().getColumnCount() > 0) {
            table_urunler.getColumnModel().getColumn(0).setMinWidth(50);
            table_urunler.getColumnModel().getColumn(0).setMaxWidth(50);
            table_urunler.getColumnModel().getColumn(2).setMinWidth(42);
            table_urunler.getColumnModel().getColumn(2).setMaxWidth(42);
            table_urunler.getColumnModel().getColumn(3).setMinWidth(40);
            table_urunler.getColumnModel().getColumn(3).setMaxWidth(40);
        }

        btn_kapat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PayposKapat.png"))); // NOI18N
        btn_kapat.setText("Kapat");
        btn_kapat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_kapatActionPerformed(evt);
            }
        });

        btn_urunsil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/table-remove-icon.png"))); // NOI18N
        btn_urunsil.setText("Ürün Çıkar");
        btn_urunsil.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_urunsilMousePressed(evt);
            }
        });
        btn_urunsil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_urunsilActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Barkod", "Tutar"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Barkod", "Ürün", "Adet", "Adet Fiyat"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setMinWidth(50);
            jTable2.getColumnModel().getColumn(0).setMaxWidth(50);
            jTable2.getColumnModel().getColumn(1).setMinWidth(65);
            jTable2.getColumnModel().getColumn(1).setMaxWidth(65);
            jTable2.getColumnModel().getColumn(2).setMinWidth(50);
            jTable2.getColumnModel().getColumn(2).setMaxWidth(50);
        }

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("Stoğu Azalanlar");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(85, 85, 85))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_urunsil)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_kapat))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btn_urunsil)
                            .addComponent(btn_kapat, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Paypostable.png"))); // NOI18N
        jMenu1.setText("Tablolar");

        jMenu4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PayposGoster.png"))); // NOI18N
        jMenu4.setText("Ürünler");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PayposGoster.png"))); // NOI18N
        jMenuItem2.setText("Göster");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem2);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Paypostabloekle.png"))); // NOI18N
        jMenuItem5.setText("Ekle");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem5);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/payposupdate.png"))); // NOI18N
        jMenuItem4.setText("Fiyat Güncelle");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem4);

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/table-remove-icon.png"))); // NOI18N
        jMenuItem6.setText("Sil");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem6);

        jMenu1.add(jMenu4);

        jMenu5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/payposveresiyesatıs.png"))); // NOI18N
        jMenu5.setText("Veresiye");

        jMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PayposGoster.png"))); // NOI18N
        jMenuItem7.setText("Göster");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem7);

        jMenuItem8.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/payposveresiyesatıs.png"))); // NOI18N
        jMenuItem8.setText("Ödeme Yap");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem8);

        jMenu1.add(jMenu5);

        jMenu6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PayposStok16.png"))); // NOI18N
        jMenu6.setText("Stok");

        jMenuItem9.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PayposGoster.png"))); // NOI18N
        jMenuItem9.setText("Göster");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem9);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Paypostabloekle.png"))); // NOI18N
        jMenuItem3.setText("Ekle");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem3);

        jMenu1.add(jMenu6);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/payposalısveris.png"))); // NOI18N
        jMenuItem1.setText("Satışlar");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu3.setIcon(new javax.swing.ImageIcon("D:\\Belgeler\\New Folder\\PayPos\\Iconlar\\Payposhakkında24.png")); // NOI18N
        jMenu3.setText("Hakkında");
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

     @SuppressWarnings("ConvertToStringSwitch")
    public static int dönüştür(int para,String birim)
    {
        double sonuc=0;
        if (birim.equals("Dolar"))
            {
               sonuc=para*5.70;
            
            }
            else if (birim.equals("Euro")) 
            {
                sonuc=para*6.27;
            } 
        return(int)sonuc; 
    }
    
    
    private void btn_satısActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_satısActionPerformed
        // TODO add your handling code here:
      DefaultTableModel tablo=(DefaultTableModel) table_urunler.getModel();
      String gelen=txt_toplamtutar.getText();
      String nakit=txt_nakittutar.getText();
      int a=Integer.parseInt(gelen);
      int b=Integer.parseInt(nakit);
      @SuppressWarnings("UnusedAssignment")
      int sonuc=0;
     try
      {
       
         if (cm_doviz.getSelectedItem().equals("TL")&&cm_kdv.getSelectedItem().equals("%1")&&cm_indirim.getSelectedItem().equals("%1"))
        {
            lbl_goster1.setText("");   
             a+=a*0.01;
             a-=a*1/100;
             sonuc=b-a;
            if (sonuc<0) 
            {
     
            lbl_goster.setText("Lütfen Veresiye Satış Yapınız");
            txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
             veresiye=1;
             }
            else
            {
              lbl_goster.setText("");
              txt_ustukalan.setText(String.valueOf(sonuc));
              veresiye=0;
            conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText());
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                 JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
                   
             }
            catch(SQLException | HeadlessException ex)
            {
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            }
        
             
            }
        }
        else if (cm_doviz.getSelectedItem().equals("TL")&&cm_kdv.getSelectedItem().equals("%1")&&cm_indirim.getSelectedItem().equals("%5")) 
        {
            lbl_goster1.setText("");
             a+=a*0.01;
             a-=a*5/100;
             sonuc=b-a;
            if (sonuc<0) 
            {
           lbl_goster.setText("Lütfen Veresiye Satış Yapınız");
            txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
              veresiye=1;
             }
            else
            {
            lbl_goster.setText("");
             txt_ustukalan.setText(String.valueOf(sonuc));
               veresiye=0;
                conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText());
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                  
                    JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            }
         }
           
         
        }
        else if (cm_doviz.getSelectedItem().equals("TL")&&cm_kdv.getSelectedItem().equals("%1")&&cm_indirim.getSelectedItem().equals("%10")) 
        {
             lbl_goster1.setText("");  
             a+=a*0.01;
             a-=a*10/100;
             sonuc=b-a;
            if (sonuc<0) 
            {
             lbl_goster.setText("Lütfen Veresiye Satış Yapınız");
           txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
              veresiye=1;
              
            }
            else
            {
                lbl_goster.setText("");
               txt_ustukalan.setText(String.valueOf(sonuc));
                 veresiye=0;
                  conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText());
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                   
                    JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            }
            }
        }
        else if (cm_doviz.getSelectedItem().equals("TL")&&cm_kdv.getSelectedItem().equals("%8")&&cm_indirim.getSelectedItem().equals("%1"))
       {
             lbl_goster1.setText(""); 
             a+=a*0.08;
             a-=a*1/100;
             sonuc=b-a;
            if (sonuc<0) 
            {
            lbl_goster.setText("Lütfen Veresiye Satış Yapınız");
            txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
              veresiye=1;
              
            }
            else
            {
             lbl_goster.setText("");
              txt_ustukalan.setText(String.valueOf(sonuc));
               veresiye=0;
                conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText());
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                   
                     JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            }
            }
       }
       else if (cm_doviz.getSelectedItem().equals("TL")&&cm_kdv.getSelectedItem().equals("%8")&&cm_indirim.getSelectedItem().equals("%5"))
       {
            lbl_goster1.setText("");  
             a+=a*0.08;
             a-=a*5/100;
             sonuc=b-a;
            if (sonuc<0) 
            {
              lbl_goster.setText("Lütfen Veresiye Satış Yapınız");
               txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
               veresiye=1;
            
            }
            else
            {
                lbl_goster.setText("");
                 txt_ustukalan.setText(String.valueOf(sonuc));
                 veresiye=0;
                  conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText());
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                   
                    JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            }
            }
       }
       else if (cm_doviz.getSelectedItem().equals("TL")&&cm_kdv.getSelectedItem().equals("%8")&&cm_indirim.getSelectedItem().equals("%10"))
       {
            lbl_goster1.setText("");
             a+=a*0.08;
             a-=a*10/100;
             sonuc=b-a;
           if (sonuc<0) 
            {
            lbl_goster.setText("Lütfen Veresiye Satış Yapınız");
            txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
              veresiye=1;
              
             
            }
            else
            {
                 lbl_goster.setText("");
              txt_ustukalan.setText(String.valueOf(sonuc));
               veresiye=0;
                conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText());
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                   
                    JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            }
            }
       }
        else if (cm_doviz.getSelectedItem().equals("TL")&&cm_kdv.getSelectedItem().equals("%18")&&cm_indirim.getSelectedItem().equals("%1"))
       {
             lbl_goster1.setText(""); 
             a+=a*0.18;
             a-=a*1/100;
             sonuc=b-a;
            if (sonuc<0) 
            {
          lbl_goster.setText("Lütfen Veresiye Satış Yapınız");
            txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
              veresiye=1;
             }
            else
            {
                lbl_goster.setText("");
               txt_ustukalan.setText(String.valueOf(sonuc));
                veresiye=0;
                 conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText());
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                   
                   JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            }
            }
       }
        else if (cm_doviz.getSelectedItem().equals("TL")&&cm_kdv.getSelectedItem().equals("%18")&&cm_indirim.getSelectedItem().equals("%5"))
       {
             lbl_goster1.setText(""); 
             a+=a*0.18;
             a-=a*5/100;
             sonuc=b-a;
            if (sonuc<0) 
            {
            lbl_goster.setText("Lütfen Veresiye Satış Yapınız");
             txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
              veresiye=1;
            
            }
            else
            {
            lbl_goster.setText("");
          txt_ustukalan.setText(String.valueOf(sonuc));
               veresiye=0;
                conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText());
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                   
                   JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            }
            }
       }
        else if (cm_doviz.getSelectedItem().equals("TL")&&cm_kdv.getSelectedItem().equals("%18")&&cm_indirim.getSelectedItem().equals("%10"))
       {
             lbl_goster1.setText("");
             a+=a*0.18;
             a-=a*10/100;
             sonuc=b-a;
            if (sonuc<0) 
            {
             lbl_goster.setText("Lütfen Veresiye Satış Yapınız");
             txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
              veresiye=1;
             
            }
            else
            {
                lbl_goster.setText("");
               txt_ustukalan.setText(String.valueOf(sonuc));
                veresiye=0;
                 conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText());
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                   
                    JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            }
            }
           }
        else if (cm_doviz.getSelectedItem().equals("Dolar")&&cm_kdv.getSelectedItem().equals("%1")&&cm_indirim.getSelectedItem().equals("%1"))
        {
            lbl_goster1.setText("");
            b=dönüştür(b,"Dolar");
             a+=a*0.01;
             a-=a*1/100;
             sonuc=b-a;
            if (sonuc<0) 
            {
             lbl_goster.setText("Lütfen Veresiye Satış Yapınız");
             txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
              veresiye=1;
             
            }
            else
            {
                lbl_goster.setText("");
               txt_ustukalan.setText(String.valueOf(sonuc));
                veresiye=0;
                 conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText()+"Dolar");
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }  
                   JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            }
            }    
        }
        else if (cm_doviz.getSelectedItem().equals("Dolar")&&cm_kdv.getSelectedItem().equals("%1")&&cm_indirim.getSelectedItem().equals("%5"))
        {
            lbl_goster1.setText("");   
            b=dönüştür(b,"Dolar");
             a+=a*0.01;
             a-=a*5/100;
             sonuc=b-a;
            if (sonuc<0) 
            {
             lbl_goster.setText("Lütfen Veresiye Satış Yapınız");
             txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
              veresiye=1;
             
            }
            else
            {
                lbl_goster.setText("");
               txt_ustukalan.setText(String.valueOf(sonuc));
                veresiye=0;
                  conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText()+" Dolar");
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                    
                   JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            }
            }    
        }
        else if (cm_doviz.getSelectedItem().equals("Dolar")&&cm_kdv.getSelectedItem().equals("%1")&&cm_indirim.getSelectedItem().equals("%10"))
        {
            lbl_goster1.setText("");
            b=dönüştür(b,"Dolar");
             a+=a*0.01;
             a-=a*10/100;
             sonuc=b-a;
            if (sonuc<0) 
            {
             lbl_goster.setText("Lütfen Veresiye Satış Yapınız");
             txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
              veresiye=1;
             
            }
            else
            {
                lbl_goster.setText("");
               txt_ustukalan.setText(String.valueOf(sonuc));
                veresiye=0;
                  conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText()+" Dolar");
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                            
                     JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            }
            }    
        }
         else if (cm_doviz.getSelectedItem().equals("Dolar")&&cm_kdv.getSelectedItem().equals("%8")&&cm_indirim.getSelectedItem().equals("%1"))
        {
            lbl_goster1.setText("");
             b=dönüştür(b,"Dolar");
             a+=a*0.08;
             a-=a*1/100;
             sonuc=b-a;
            if (sonuc<0) 
            {
             lbl_goster.setText("Lütfen Veresiye Satış Yapınız");
             txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
              veresiye=1;
             
            }
            else
            {
                lbl_goster.setText("");
               txt_ustukalan.setText(String.valueOf(sonuc));
                veresiye=0; 
                conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText()+" Dolar");
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                   
                    JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            }
            }    
        }
         else if (cm_doviz.getSelectedItem().equals("Dolar")&&cm_kdv.getSelectedItem().equals("%8")&&cm_indirim.getSelectedItem().equals("%5"))
        {
            lbl_goster1.setText("");
             b=dönüştür(b,"Dolar");
             a+=a*0.08;
             a-=a*5/100;
             sonuc=b-a;
            if (sonuc<0) 
            {
             lbl_goster.setText("Lütfen Veresiye Satış Yapınız");
             txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
              veresiye=1;
             
            }
            else
            {
                lbl_goster.setText("");
               txt_ustukalan.setText(String.valueOf(sonuc));
                veresiye=0;
                  conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText()+" Dolar");
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                  
                 JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            }
            }    
        }
          else if (cm_doviz.getSelectedItem().equals("Dolar")&&cm_kdv.getSelectedItem().equals("%8")&&cm_indirim.getSelectedItem().equals("%10"))
        {
             lbl_goster1.setText("");
             b=dönüştür(b,"Dolar");
             a+=a*0.08;
             a-=a*10/100;
             sonuc=b-a;
            if (sonuc<0) 
            {
             lbl_goster.setText("Lütfen Veresiye Satış Yapınız");
             txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
              veresiye=1;
             
            }
            else
            {
                lbl_goster.setText("");
               txt_ustukalan.setText(String.valueOf(sonuc));
                veresiye=0;
                  conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText()+" Dolar");
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                   
                     JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            }
            }    
        }
          else if (cm_doviz.getSelectedItem().equals("Dolar")&&cm_kdv.getSelectedItem().equals("%18")&&cm_indirim.getSelectedItem().equals("%1"))
        {
             lbl_goster1.setText("");
             b=dönüştür(b,"Dolar");
             a+=a*0.18;
             a-=a*1/100;
             sonuc=b-a;
            if (sonuc<0) 
            {
             lbl_goster.setText("Lütfen Veresiye Satış Yapınız");
             txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
              veresiye=1;
             
            }
            else
            {
                lbl_goster.setText("");
               txt_ustukalan.setText(String.valueOf(sonuc));
                veresiye=0;
                  conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText()+" Dolar");
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                   
                   JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            }
            }    
        }
          else if (cm_doviz.getSelectedItem().equals("Dolar")&&cm_kdv.getSelectedItem().equals("%18")&&cm_indirim.getSelectedItem().equals("%5"))
        {
             lbl_goster1.setText("");
             b=dönüştür(b,"Dolar");
             a+=a*0.18;
             a-=a*5/100;
             sonuc=b-a;
            if (sonuc<0) 
            {
             lbl_goster.setText("Lütfen Veresiye Satış Yapınız");
             txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
              veresiye=1;
             
            }
            else
            {
                lbl_goster.setText("");
               txt_ustukalan.setText(String.valueOf(sonuc));
                veresiye=0;
                  conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText()+" Dolar");
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                   
                    JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            }
            }    
        }
          else if (cm_doviz.getSelectedItem().equals("Dolar")&&cm_kdv.getSelectedItem().equals("%18")&&cm_indirim.getSelectedItem().equals("%10"))
        {
             lbl_goster1.setText("");
             b=dönüştür(b,"Dolar");
             a+=a*0.18;
             a-=a*10/100;
             sonuc=b-a;
            if (sonuc<0) 
            {
             lbl_goster.setText("Lütfen Veresiye Satış Yapınız");
             txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
              veresiye=1;
             
            }
            else
            {
                lbl_goster.setText("");
               txt_ustukalan.setText(String.valueOf(sonuc));
                veresiye=0;
                  conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText()+" Dolar");
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                   
                  JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            }
            }    
        }
           else if (cm_doviz.getSelectedItem().equals("Euro")&&cm_kdv.getSelectedItem().equals("%1")&&cm_indirim.getSelectedItem().equals("%1"))
        {
            lbl_goster.setText("");
             b=dönüştür(b,"Euro");
             a+=a*0.01;
             a-=a*1/100;
             sonuc=b-a;
            if (sonuc<0) 
            {
             lbl_goster1.setText("Lütfen Veresiye Satış Yapınız");
             txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
              veresiye=1;
             
            }
            else
            {
                lbl_goster1.setText("");
               txt_ustukalan.setText(String.valueOf(sonuc));
                veresiye=0;
               conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText()+" Euro");
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                  
                    JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            }
            }    
        }
           else if (cm_doviz.getSelectedItem().equals("Euro")&&cm_kdv.getSelectedItem().equals("%1")&&cm_indirim.getSelectedItem().equals("%5"))
        {
             lbl_goster.setText("");
             b=dönüştür(b,"Euro");
             a+=a*0.01;
             a-=a*5/100;
             sonuc=b-a;
            if (sonuc<0) 
            {
             lbl_goster1.setText("Lütfen Veresiye Satış Yapınız");
             txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
              veresiye=1;
             
            }
            else
            {
                lbl_goster1.setText("");
               txt_ustukalan.setText(String.valueOf(sonuc));
                veresiye=0;
                 conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText()+" Euro");
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                   
                     JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            }
            }    
        }
             else if (cm_doviz.getSelectedItem().equals("Euro")&&cm_kdv.getSelectedItem().equals("%1")&&cm_indirim.getSelectedItem().equals("%10"))
        {
             lbl_goster.setText("");
             b=dönüştür(b,"Euro");
             a+=a*0.01;
             a-=a*10/100;
             sonuc=b-a;
            if (sonuc<0) 
            {
             lbl_goster1.setText("Lütfen Veresiye Satış Yapınız");
             txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
              veresiye=1;
             
            }
            else
            {
                lbl_goster1.setText("");
               txt_ustukalan.setText(String.valueOf(sonuc));
                veresiye=0;
                  conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText()+" Euro");
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                    
                     JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            } 
            }    
           }
             else if (cm_doviz.getSelectedItem().equals("Euro")&&cm_kdv.getSelectedItem().equals("%8")&&cm_indirim.getSelectedItem().equals("%1")) 
             {
               lbl_goster.setText("");
                b=dönüştür(b,"Euro");
                 a+=a*0.08;
                 a-=a*1/100;
                 sonuc=b-a;
               if (sonuc<0) 
                {
                 lbl_goster1.setText("Lütfen Veresiye Satış Yapınız");
                 txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
                 veresiye=1;
             
              }
            else
               {
                  lbl_goster1.setText("");
                  txt_ustukalan.setText(String.valueOf(sonuc));
                  veresiye=0;
                     conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText()+" Euro");
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                    
                  JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            }
                }    
             }
          else if (cm_doviz.getSelectedItem().equals("Euro")&&cm_kdv.getSelectedItem().equals("%8")&&cm_indirim.getSelectedItem().equals("%5")) {
               lbl_goster.setText("");
                 b=dönüştür(b,"Euro");
                 a+=a*0.08;
                 a-=a*5/100;
                 sonuc=b-a;
               if (sonuc<0) 
                {
                 lbl_goster1.setText("Lütfen Veresiye Satış Yapınız");
                 txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
                 veresiye=1;
             
              }
            else
               {
                  lbl_goster1.setText("");
                  txt_ustukalan.setText(String.valueOf(sonuc));
                  veresiye=0;
                    conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText()+" Euro");
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                   
                   JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            } 
                }    
             }
          else if (cm_doviz.getSelectedItem().equals("Euro")&&cm_kdv.getSelectedItem().equals("%8")&&cm_indirim.getSelectedItem().equals("%10")) {
               lbl_goster.setText("");
                 b=dönüştür(b,"Euro");
                 a+=a*0.08;
                 a-=a*10/100;
                 sonuc=b-a;
               if (sonuc<0) 
                {
                 lbl_goster1.setText("Lütfen Veresiye Satış Yapınız");
                 txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
                 veresiye=1;
             
              }
            else
               {
                  lbl_goster1.setText("");
                  txt_ustukalan.setText(String.valueOf(sonuc));
                  veresiye=0;
                     conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText()+" Euro");
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                   
                   JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            }
                }    
          }
          else if (cm_doviz.getSelectedItem().equals("Euro")&&cm_kdv.getSelectedItem().equals("%18")&&cm_indirim.getSelectedItem().equals("%1")) {
                 lbl_goster.setText("");
                 b=dönüştür(b,"Euro");
                 a+=a*0.18;
                 a-=a*1/100;
                 sonuc=b-a;
               if (sonuc<0) 
                {
                 lbl_goster1.setText("Lütfen Veresiye Satış Yapınız");
                 txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
                 veresiye=1;
             
              }
            else
               {
                  lbl_goster1.setText("");
                  txt_ustukalan.setText(String.valueOf(sonuc));
                  veresiye=0;
                     conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText()+" Euro");
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                   
                   JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            }
                }    
          }
        else if (cm_doviz.getSelectedItem().equals("Euro")&&cm_kdv.getSelectedItem().equals("%18")&&cm_indirim.getSelectedItem().equals("%5")) {
                 
                lbl_goster.setText("");
                 b=dönüştür(b,"Euro");
                 a+=a*0.18;
                 a-=a*5/100;
                 sonuc=b-a;
               if (sonuc<0) 
                {
                 lbl_goster1.setText("Lütfen Veresiye Satış Yapınız");
                 txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
                 veresiye=1;
             
              }
            else
               {
                  lbl_goster1.setText("");
                  txt_ustukalan.setText(String.valueOf(sonuc));
                  veresiye=0;
                     conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText()+" Euro");
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                    
                    JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            }
                }    
          }
        else if (cm_doviz.getSelectedItem().equals("Euro")&&cm_kdv.getSelectedItem().equals("%18")&&cm_indirim.getSelectedItem().equals("%10")) {
                    lbl_goster.setText("");
                 b=dönüştür(b,"Euro");
                 a+=a*0.18;
                 a-=a*10/100;
                 sonuc=b-a;
               if (sonuc<0) 
                {
                 lbl_goster1.setText("Lütfen Veresiye Satış Yapınız");
                 txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
                 veresiye=1;
             
              }
            else
               {
                  lbl_goster1.setText("");
                  txt_ustukalan.setText(String.valueOf(sonuc));
                  veresiye=0;
                     conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText()+" Euro");
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                   
                     JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            }
                }      
            
            
          }
        else if (cm_doviz.getSelectedItem().equals("TL")&&cm_kdv.getSelectedItem().equals("%1"))
          {
             lbl_goster1.setText("");
             a+=a*0.01;
             sonuc=b-a;
            if (sonuc<0) 
            {
             lbl_goster.setText("Lütfen Veresiye Satış Yapınız");
           txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
              veresiye=1;
              
            }
            else
            {
                lbl_goster.setText("");
               txt_ustukalan.setText(String.valueOf(sonuc));
                 veresiye=0;
                    conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText());
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                   
                    JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            }
            }
            
          }
        else if (cm_doviz.getSelectedItem().equals("TL")&&cm_kdv.getSelectedItem().equals("%8")) {
              
               lbl_goster1.setText("");
              a+=a*0.08;
             sonuc=b-a;
            if (sonuc<0) 
            {
             lbl_goster.setText("Lütfen Veresiye Satış Yapınız");
           txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
              veresiye=1;
              
            }
            else
            {
                lbl_goster.setText("");
               txt_ustukalan.setText(String.valueOf(sonuc));
                 veresiye=0;
                    conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText());
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                   
                    JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            }
            }
          }
        else if (cm_doviz.getSelectedItem().equals("TL")&&cm_kdv.getSelectedItem().equals("%18")) {
             lbl_goster1.setText("");   
              a+=a*0.18;
             sonuc=b-a;
            if (sonuc<0) 
            {
             lbl_goster.setText("Lütfen Veresiye Satış Yapınız");
           txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
              veresiye=1;
              
            }
            else
            {
                lbl_goster.setText("");
               txt_ustukalan.setText(String.valueOf(sonuc));
                 veresiye=0;
                    conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText());
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                   
                    JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            }
            }  
            
          }
        else if (cm_doviz.getSelectedItem().equals("Dolar")&&cm_kdv.getSelectedItem().equals("%1")) {
           lbl_goster1.setText("");
            b=dönüştür(b,"Dolar");
             a+=a*0.01;
            sonuc=b-a;
            if (sonuc<0) 
            {
             lbl_goster.setText("Lütfen Veresiye Satış Yapınız");
             txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
              veresiye=1;
             
            }
            else
            {
                lbl_goster.setText("");
               txt_ustukalan.setText(String.valueOf(sonuc));
                veresiye=0;
              conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText()+" Dolar");
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                   
                   JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            }
            }    
          }
        else if (cm_doviz.getSelectedItem().equals("Dolar")&&cm_kdv.getSelectedItem().equals("%8")) {
            lbl_goster1.setText("");
            b=dönüştür(b,"Dolar");
            a+=a*0.08;
            sonuc=b-a;
            if (sonuc<0) 
            {
             lbl_goster.setText("Lütfen Veresiye Satış Yapınız");
             txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
              veresiye=1;
             
            }
            else
            {
                lbl_goster.setText("");
               txt_ustukalan.setText(String.valueOf(sonuc));
                veresiye=0;
                conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText()+" Dolar");
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                   
                   JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            }  
            }    
          }
        else if (cm_doviz.getSelectedItem().equals("Dolar")&&cm_kdv.getSelectedItem().equals("%18")) {
              lbl_goster1.setText("");
            b=dönüştür(b,"Dolar");
             a+=a*0.18;
             sonuc=b-a;
            if (sonuc<0) 
            {
             lbl_goster.setText("Lütfen Veresiye Satış Yapınız");
             txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
              veresiye=1;
             
            }
            else
            {
                lbl_goster.setText("");
               txt_ustukalan.setText(String.valueOf(sonuc));
                veresiye=0;
                conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText()+" Dolar");
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                   
                    JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            }  
            }    
          }
        else if (cm_doviz.getSelectedItem().equals("Euro")&&cm_kdv.getSelectedItem().equals("%1")){
                 lbl_goster.setText("");
                 b=dönüştür(b,"Euro");
                 a+=a*0.01;
                 sonuc=b-a;
               if (sonuc<0) 
                {
                 lbl_goster1.setText("Lütfen Veresiye Satış Yapınız");
                 txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
                 veresiye=1;
             
              }
            else
               {
                  lbl_goster1.setText("");
                  txt_ustukalan.setText(String.valueOf(sonuc));
                  veresiye=0;
                    conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText()+" Euro");
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                  
                     JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            }
                }    
          }
        else if (cm_doviz.getSelectedItem().equals("Euro")&&cm_kdv.getSelectedItem().equals("%8")) {
                 lbl_goster.setText("");
                 b=dönüştür(b,"Euro");
                 a+=a*0.08;
                 sonuc=b-a;
               if (sonuc<0) 
                {
                 lbl_goster1.setText("Lütfen Veresiye Satış Yapınız");
                 txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
                 veresiye=1;
             
              }
            else
               {
                  lbl_goster1.setText("");
                  txt_ustukalan.setText(String.valueOf(sonuc));
                  veresiye=0;
                    conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText()+" Euro");
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                   
                    JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            }
                }    
          }
        else if (cm_doviz.getSelectedItem().equals("Euro")&&cm_kdv.getSelectedItem().equals("%18")) {
                 lbl_goster.setText("");
                 b=dönüştür(b,"Euro");
                 a+=a*0.18;
                 sonuc=b-a;
               if (sonuc<0) 
                {
                 lbl_goster1.setText("Lütfen Veresiye Satış Yapınız");
                 txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
                 veresiye=1;
             
              }
            else
               {
                  lbl_goster1.setText("");
                  txt_ustukalan.setText(String.valueOf(sonuc));
                  veresiye=0;
                   conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText()+" Euro");
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                   
                    JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            } 
                }    
          }
        else if (cm_doviz.getSelectedItem().equals("TL")) {
             lbl_goster1.setText("");
            sonuc=b-a;
           if (sonuc<0) 
            {
            lbl_goster.setText("Lütfen Veresiye Satış Yapınız");
            txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
              veresiye=1;
             
            }
            else
            {
                 lbl_goster.setText("");
              txt_ustukalan.setText(String.valueOf(sonuc));
               veresiye=0;
                 conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText());
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                   
                   
                     JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            }
               
            }
          }
        else if (cm_doviz.getSelectedItem().equals("Dolar")) {
              lbl_goster1.setText("");
            b=dönüştür(b,"Dolar");
            sonuc=b-a;
            if (sonuc<0) 
            {
             lbl_goster.setText("Lütfen Veresiye Satış Yapınız");
             txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
              veresiye=1;
             
            }
            else
            {
                lbl_goster.setText("");
               txt_ustukalan.setText(String.valueOf(sonuc));
                veresiye=0;  conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText()+" Dolar");
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                   
                  
                     JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            }
            }    
          }
        else  {
                lbl_goster.setText("");
                 b=dönüştür(b,"Euro");
                 sonuc=b-a;
               if (sonuc<0) 
                {
                 lbl_goster1.setText("Lütfen Veresiye Satış Yapınız");
                 txt_ustukalan.setText(String.valueOf(Math.abs(sonuc)));
                 veresiye=1;
             
              }
            else
               {
                  lbl_goster1.setText("");
                  txt_ustukalan.setText(String.valueOf(sonuc));
                  veresiye=0;
                  conn=db.db_java();
            String sorgu="INSERT  INTO  Satıslar (Barkod,Urun,Miktar,Fiyat,Tutar,Nakit,Paraustu) VALUES(?,?,?,?,?,?,?)";
            try
            {
                pst=conn.prepareStatement(sorgu);
                for (int i = 0; i <tablo.getRowCount(); i++) 
                {
                  pst.setString(1,table_urunler.getValueAt(i,0).toString());
                  pst.setString(2,table_urunler.getValueAt(i,1).toString());
                  pst.setString(3,table_urunler.getValueAt(i,2).toString());
                  pst.setString(4,table_urunler.getValueAt(i,3).toString());
                  pst.setString(5,txt_toplamtutar.getText());
                  pst.setString(6,txt_nakittutar.getText()+" Euro");
                  pst.setString(7,txt_ustukalan.getText());
                  pst.execute();
                }    
                   
                   
                     JOptionPane.showMessageDialog(null,"Satış başarı ile Gerçekleşti");
             }
            catch(SQLException | HeadlessException ex)
            {
                
               JOptionPane.showMessageDialog(null,"Satış kaydı başarısız.");
            }
            finally
            {
                try
                {
                    conn.close();
                }
                catch (Exception e) {
                }

            }  
                }    
          }
      }          
      catch(Exception e)
      {
        JOptionPane.showMessageDialog(null,"Lütfen Geçerli bir para miktarı giriniz.!");
      }
        
    }//GEN-LAST:event_btn_satısActionPerformed

    private void btn_kapatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_kapatActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btn_kapatActionPerformed

    private void txt_barkodgirKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_barkodgirKeyReleased
        // TODO add your handling code here:
         txt_ustukalan.setText("");
        String fiyat=txt_toplamtutar.getText();
        int toplam =0;
       DefaultTableModel model=(DefaultTableModel)table_urunler.getModel();
        try 
        {
          conn=db.db_java();
          String sorgu="Select * From Urunler WHERE Barkod=?";
          pst=conn.prepareStatement(sorgu);
          pst.setString(1,txt_barkodgir.getText());
          rs=pst.executeQuery();
            while (rs.next())
            {                
                String barkodal=rs.getString("Barkod");
                String urunal=rs.getString("Urun");
                String miktaral=rs.getString("Miktar");
                String fiyatal=rs.getString("Fiyat");
                model.addRow(new Object[] {barkodal,urunal,miktaral,fiyatal});
                lbl_urungoster.setText(urunal);
                lbl_miktargoster.setText(miktaral);
                lbl_fiyatgoster.setText(fiyatal);
                txt_toplamtutar.setText(fiyatal);
              
                txt_barkodgir.setText("");
                int lira1=Integer.parseInt(fiyat);
                int lira2=Integer.parseInt(fiyatal);
                toplam=lira1+lira2;
                String lirayaz=String.valueOf(toplam);
                txt_toplamtutar.setText(lirayaz);        
                                 
            }
        }
        catch (SQLException | NumberFormatException e) 
        {
         // JOptionPane.showMessageDialog(null,"Böyle bir ürün yok.");
        }
        finally
        {
            try 
            {
                conn.close();
            }
            catch (Exception e)
            {
                
            }
        }
        
    }//GEN-LAST:event_txt_barkodgirKeyReleased

    private void btn_veresiyesatısActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_veresiyesatısActionPerformed
        // TODO add your handling code here:
        if (veresiye==1)
        {
             ver.setVisible(true);
             toplam=txt_ustukalan.getText();
             int a=Integer.parseInt(toplam);
             int b=Math.abs(a);
             toplam=String.valueOf(b);
            setToplam(toplam);
         
        }
        else
        {
           ver.setVisible(false);
        }
       
    
    
      
    }//GEN-LAST:event_btn_veresiyesatısActionPerformed

    private void btn_urunsilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_urunsilActionPerformed
       DefaultTableModel model = (DefaultTableModel) table_urunler.getModel();  
       int secilen=table_urunler.getSelectedRow();
        if (table_urunler.getSelectedRow()>=0)
        {
         Object gelenfiyat=table_urunler.getValueAt(secilen,3);
         int fiyat=Integer.parseInt((String) gelenfiyat);
         int toplam=Integer.parseInt(txt_toplamtutar.getText());
         int sonuc=toplam-fiyat;   
         txt_toplamtutar.setText(String.valueOf(sonuc));
         model.removeRow(secilen);
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Lütfen Çıkarmak İstediğiniz Ürünü Seçiniz");
        }

       
       
         
    }//GEN-LAST:event_btn_urunsilActionPerformed

    private void btn_urunsilMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_urunsilMousePressed

    }//GEN-LAST:event_btn_urunsilMousePressed

    private void btn_iadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_iadeActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) table_urunler.getModel();  
        int secilen=table_urunler.getSelectedRow();
        if (table_urunler.getSelectedRow()>=0)
        {
         Object gelenfiyat=table_urunler.getValueAt(secilen,3);
         int fiyat=Integer.parseInt((String) gelenfiyat);
         int paraustu=Integer.parseInt(txt_ustukalan.getText());
         int toplam=Integer.parseInt(txt_toplamtutar.getText());
         int sonuc1=toplam-fiyat;
         int sonuc=paraustu-fiyat;   
         if (sonuc<0) 
            {
                txt_toplamtutar.setText("0.0");
                txt_ustukalan.setText("0.0");
         
                model.removeRow(secilen); 
            }
         else if (sonuc1==0) 
         {
                txt_toplamtutar.setText("0.0");
                txt_ustukalan.setText("0.0");
               
                model.removeRow(secilen); 
         }
         else if(sonuc1!=0)
         { 
           txt_toplamtutar.setText(String.valueOf(sonuc1));
           txt_ustukalan.setText(String.valueOf(sonuc));
           model.removeRow(secilen);
           
         }
     
      }
         else
          {
            JOptionPane.showMessageDialog(null,"Lütfen Çıkarmak İstediğiniz Ürünü Seçiniz");
          }
        
    }//GEN-LAST:event_btn_iadeActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        Urunler urunler=new Urunler();
        urunler.setVisible(true);
        
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        Ekle ekle=new Ekle();
        ekle.setVisible(true);
                
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        Sil sil=new  Sil();
        sil.setVisible(true);
        
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
        VeresiyeTablosu veresiyeTablosu=new VeresiyeTablosu();
        veresiyeTablosu.setVisible(true);
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
         ÖdemeYap ödemeYap=new ÖdemeYap();
         ödemeYap.setVisible(true);
      
        
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
       DefaultTableModel tablo=(DefaultTableModel)table_urunler.getModel();
       DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
       String adet=table_urunler.getValueAt(0,2).toString();
          int row=model.getRowCount(); 
        for (int l =row-1; l >=0; l--)
                     {
                      model.removeRow(l);
                    }
                     int row1=tablo.getRowCount(); 
         for (int m =row-1; m >=0; m--)
           {
                      tablo.removeRow(m);
          }
           
       int adet1=Integer.parseInt(adet);
       int miktar;
       int deneme=1;
       conn=db.db_java();
       String sorgu="Select * From Stoklar Where Barkod=?";
       try 
        {
           for (int i = 0; i <tablo.getRowCount(); i++) 
           {
               pst=conn.prepareStatement(sorgu);
               pst.setString(1,table_urunler.getValueAt(i,0).toString());
               rs=pst.executeQuery();
               while (rs.next())
               {                   
                  miktar=rs.getInt("Adet");
                  String barkod=table_urunler.getValueAt(i,0).toString();
                  miktar-=adet1;    
                 model.addRow(new Object[] {barkod,miktar});
                }
             
            }
            
        }
        catch (Exception e) 
        {
        }
        finally
       {
           try 
           {
            conn.close();
           }
           catch (Exception e) 
           {
           }
       }
      conn=db.db_java();
       String sql="Update Stoklar SET Adet=? Where Barkod=?";
        try 
        {  
           for (int j = 0; j <model.getRowCount(); j++) 
               {
                  pst=conn.prepareStatement(sql);
                  pst.setString(1,jTable1.getValueAt(j,1).toString());
                  pst.setString(2,jTable1.getValueAt(j,0).toString());
                  pst.executeUpdate();  
               }
           txt_toplamtutar.setText("");
           txt_nakittutar.setText("");
           txt_ustukalan.setText("");
          
        }
        catch (Exception e)
        {
          
        }
        finally
        {
            try 
            {
              conn.close();
            } catch (Exception e) {
            }
                
        }
          DefaultTableModel m=(DefaultTableModel)jTable2.getModel();
        DefaultTableModel t=(DefaultTableModel) jTable2.getModel();
        int rowa=m.getRowCount();
        for (int i =rowa-1; i >=0; i--)
        {
            m.removeRow(i);
        }
        try
        {
            conn=db.db_java();
            String sql1="Select * From Stoklar";
            pst=conn.prepareStatement(sql1);
            rs=pst.executeQuery();
            while (rs.next())
            {
                String barkodal=rs.getString("Barkod");
                String urunal=rs.getString("Urun");
                String miktaral=rs.getString("Adet");
                String fiyatal=rs.getString("Adetfiyat");
                m.addRow(new Object[] {barkodal,urunal,miktaral,fiyatal});

            }
        }
        catch (Exception e)
        {
        }
        finally
        {
            try
            {
                conn.close();
            }
            catch (Exception e)
            {

            }
        }
  
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        Satıslar satıslar=new  Satıslar();
        satıslar.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void txt_nakittutarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_nakittutarFocusLost
        // TODO add your handling code here:
    
    }//GEN-LAST:event_txt_nakittutarFocusLost

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
      
    }//GEN-LAST:event_formWindowActivated

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // TODO add your handling code here:
        StokGoster stokGoster=new StokGoster();
        stokGoster.setVisible(true);
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        StokEkle stokEkle=new StokEkle();
        stokEkle.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        FiyatGuncelle fiyatGuncelle=new FiyatGuncelle();
        fiyatGuncelle.setVisible(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MouseClicked
        // TODO add your handling code here:
        Hakkımda hakkımda=new Hakkımda();
        hakkımda.setVisible(true);
    }//GEN-LAST:event_jMenu3MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new HomePage().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_iade;
    private javax.swing.JButton btn_kapat;
    private javax.swing.JButton btn_satıs;
    private javax.swing.JButton btn_urunsil;
    private javax.swing.JButton btn_veresiyesatıs;
    private javax.swing.JComboBox cm_doviz;
    private javax.swing.JComboBox cm_indirim;
    private javax.swing.JComboBox cm_kdv;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JLabel lbl_barkodgir;
    private javax.swing.JLabel lbl_doviz;
    private javax.swing.JLabel lbl_fiyat;
    private javax.swing.JLabel lbl_fiyatgoster;
    private javax.swing.JLabel lbl_goster;
    private javax.swing.JLabel lbl_goster1;
    private javax.swing.JLabel lbl_indirim;
    private javax.swing.JLabel lbl_kdvoranı;
    private javax.swing.JLabel lbl_miktar;
    private javax.swing.JLabel lbl_miktargoster;
    private javax.swing.JLabel lbl_nakit;
    private javax.swing.JLabel lbl_paraustu;
    private javax.swing.JLabel lbl_toplamtutar;
    private javax.swing.JLabel lbl_urunadi;
    private javax.swing.JLabel lbl_urungoster;
    private javax.swing.JTable table_urunler;
    private javax.swing.JTextField txt_barkodgir;
    private javax.swing.JTextField txt_nakittutar;
    private javax.swing.JTextField txt_toplamtutar;
    private javax.swing.JTextField txt_ustukalan;
    // End of variables declaration//GEN-END:variables

    private void format(double sonuc) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    void tutarr() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
